/* Tiny.css library! */
:root {
  --background: #fff;
  --text: #333;
  --box-shadow-spread: 5px;
  --box-shadow: #0001;
  --box-shadow-blur: 0px;
  --border-color: lightgrey;
  --success-color: rgb(21, 163, 16);
  --success-color-hover: rgb(16, 116, 16);
  --error-color: rgb(212, 72, 47);
  --error-color-hover: rgb(180, 52, 30);
  --hr-color: lightseagreen;
  --slow-transition: 3s;
  --medium-transition: 0.5s;
  --fast-transition: 0.3s;
  --monospace-font: "Courier New";
  --main-font: "Poppins", sans-serif;
  --large-padding: 20px;
}
/* Initial styles */
.initial-styles,
.initial-styles * {
  color: var(--text);
  background: var(--background);
  font-family: var(--main-font);
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
/* Box shadows and soon more general stylings */
.box-shadow-focus:focus {
  outline: none;
  box-shadow: 0 0 var(--box-shadow-blur) var(--box-shadow-spread)
    var(--box-shadow);
}
.box-shadow-hover:hover {
  box-shadow: 0 0 var(--box-shadow-blur) var(--box-shadow-spread)
    var(--box-shadow);
}
/* General elements */
.border-radius {
  border-radius: 10px;
}
.monospace {
  font-family: var(--monospace-font), Courier, monospace;
}
.full-height {
  min-height: 100vh;
}
.padding {
  padding: var(--padding);
}
.hr {
  display: block;
  width: 100%;
  height: 2px;
  border: none;
  outline: none;
  background: linear-gradient(
    to right,
    transparent,
    var(--hr-color),
    transparent
  );
}
/* Flex */
.flex {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
.flex-row {
  flex-direction: row;
}
.flex-column {
  f
}
.absol  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.flex-container.center {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;
}
.fixed.center {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.block.center {
  margin: 0 auto;
  display: block;
}
.fit-content-height {
  height: fit-content;
}
.fit-content-width {
  width: fit-content;
}
.fill-viewport {
  width: 80vw;
  max-width: 600px;
  height: fit-content;
}
.header {
  text-align: center;
  font-weight: 900;
  font-size: 5vmin;
}
.inline-code {
  font-family: var(--monospace-font), Courier, monospace;
  padding: 4px;
  display: inline-block;
  max-width: 90%;
  overflow: scroll;
  white-space: pre;
  border-radius: 5px;
  background: #fff3;
}
/* Transition effects */
.transition-bg {
  transition-property: background-color;
}
.transition-shadow {
  transition-property: box-shadow;
}
.transition-bg.transition-shadow {
  transition-property: background-color, color, box-shadow;
}
.transition-slow {
  transition-duration: var(--slow-transition);
}
.transition-medium {
  transition-duration: var(--medium-transition);
}
.transition-fast {
  transition-duration: var(--fast-transition);
}
.transition-ease {
  transition-property: ease;
}
.transition-linear {
  transition-property: linear;
}
.transition-bounce {
  transition-property: cubic-bezier(0.175, 0.885, 0.32, 1.275);
}
/* Button styling */
.button {
  padding: 10px 15px;
  text-decoration: none;
  color: white;
  background: #333;
  border-radius: 5px;
  border: none;
}
.button:disabled,
.button.disabled {
  opacity: 0.5;
}
.button:hover {
  background: white;
  color: #333;
}
.button.error {
  background-color: var(--error-color);
}
.button.error:hover {
  background-color: var(--error-color-hover);
}
.button.success {
  background-color: var(--success-color);
}
.button.success:hover {
  background-color: var(--success-color-hover);
  color: white;
}
/* Inputs */
.input {
  padding: 10px;
  background-color: var(--background-color);
  border: 1px solid var(--border-color);
  border-radius: 5px;
}
.select {
  padding: 10px;
  border-radius: 5px;
  background: var(--background);
  border: 1px solid var(--border-color);
}
